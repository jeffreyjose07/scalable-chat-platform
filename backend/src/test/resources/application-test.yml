# Unit Test Configuration
# Uses in-memory databases and mocked services
# For integration tests, use @Testcontainers with real databases

spring:
  # Use H2 in-memory database for unit tests
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driver-class-name: org.h2.Driver
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: false
    database-platform: org.hibernate.dialect.H2Dialect
  
  h2:
    console:
      enabled: false
  
  # Disable auto-configurations that require external services
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration
      - org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration

app:
  jwt:
    secret: testSecretKey-changeInProduction-veryLongRandomString123456789
    expiration: 86400000 # 24 hours
  
  admin:
    username: testadmin
    email: testadmin@chatplatform.com
    password: testadmin123
    displayName: Test Administrator

logging:
  level:
    com.chatplatform: INFO
    org.springframework.security: INFO
    org.hibernate: WARN